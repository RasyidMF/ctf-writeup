from Crypto.Util.number import inverse
import sys

def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise Exception('modular inverse does not exist')
    else:
        return x % m

# First Cases answer
print ("y: 4636878989")
# Second
print ("y: 93089")
# Third
print ("n: We can't calculate big number")
# Cases 4
print ("y: 836623060")
# Cases 5
print ("y: 256931246631782714357241556582441991993437399854161372646318659020994329843524306570818293602492485385337029697819837182169818816821461486018802894936801257629375428544752970630870631166355711254848465862207765051226282541748174535990314552471546936536330397892907207943448897073772015986097770443616540466471245438117157152783246654401668267323136450122287983612851171545784168132230208726238881861407976917850248110805724300421712827401063963117423718797887144760360749619552577176382615108244813")
# Cases 6
print ("n: We doesn't have decryption key!")
# Cases 7
# q = 92092076805892533739724722602668675840671093008520241548191914215399824020372076186460768206814914423802230398410980218741906960527104568970225804374404612617736579286959865287226538692911376507934256844456333236362669879347073756238894784951597211105734179388300051579994253565459304743059533646753003894559
# p = 97846775312392801037224396977012615848433199640105786119757047098757998273009741128821931277074555731813289423891389911801250326299324018557072727051765547115514791337578758859803890173153277252326496062476389498019821358465433398338364421624871010292162533041884897182597065662521825095949253625730631876637
# e = 65537
# print ("y: " + str(modinv(e, (p-1) * (q-1))))
print ("y: 1405046269503207469140791548403639533127416416214210694972085079171787580463776820425965898174272870486015739516125786182821637006600742140682552321645503743280670839819078749092730110549881891271317396450158021688253989767145578723458252769465545504142139663476747479225923933192421405464414574786272963741656223941750084051228611576708609346787101088759062724389874160693008783334605903142528824559223515203978707969795087506678894006628296743079886244349469131831225757926844843554897638786146036869572653204735650843186722732736888918789379054050122205253165705085538743651258400390580971043144644984654914856729")

# Cases 8
p = 153143042272527868798412612417204434156935146874282990942386694020462861918068684561281763577034706600608387699148071015194725533394126069826857182428660427818277378724977554365910231524827258160904493774748749088477328204812171935987088715261127321911849092207070653272176072509933245978935455542420691737433
ciphertext = 3001133423508155019342391181454969453683740998389305521868482065953685989583037773702319581717484580966593370778920602258110457396723632087223210560766860657023257472172328220084386229851941678615818536289364033769762938914666434052719653085203028823631950908006150453932488069330802006070658787154818367594933024991778763357876382724018717890178006250599003585272226771381223645294365192346693302207328966906968620673419237444014642963102675933287390856161621142811266283239380789957372689818205738309791091491858305530388074249507780688913259911773093289575133704279048285836964311807507701403508531667913455534667
e = 65537
n = 23952937352643527451379227516428377705004894508566304313177880191662177061878993798938496818120987817049538365206671401938265663712351239785237507341311858383628932183083145614696585411921662992078376103990806989257289472590902167457302888198293135333083734504191910953238278860923153746261500759411620299864395158783509535039259714359526738924736952759753503357614939203434092075676169179112452620687731670534906069845965633455748606649062394293289967059348143206600765820021392608270528856238306849191113241355842396325210132358046616312901337987464473799040762271876389031455051640937681745409057246190498795697239

# Since we don't have q, we divided with p
d = modinv(e, 23952937352643527451379227516428377705004894508566304313177880191662177061878993798938496818120987817049538365206671401938265663712351239785237507341311858383628932183083145614696585411921662992078376103990806989257289472590902167457302888198293135333083734504191910953238278860923153746261500759411620299864085606824467430798175982511574214044239283703935656318515313997101737860878891537249054329675531866790776525546127000434756061294908648024860692293379814092629752906647873801056691290207831112815397967054668641292776965529908919076069755992162485872629074580831718586702591072217415299182973577373701681500624)
print ("y: " + str(pow(ciphertext, d, n)))
