from pwn import *
indx = [
    "O[4] < O[3] ? e(3, 0) : e(25),",
    "O[20] = O[0],",
    "{aa.clear();return 0;},",
    "e(16, 9, O[O[1] - 1], 25, 5, 19) + (O[5] = (byte)(6 + O[4])),",
    "O[81] += (O[5] - 103 == 0 ? 5 : 0), // 0",
    "O[6 + O[4]] = O[5],",
    "O[O[1] - 1] ^= O[4],",
    "e(25, 39, 24, 47, 9),",
    "e(18, 22, 16, 50, 45, 36),",
    "O[O[1]++] = O[5],",
    "O[25]++,",
    "O[25] / 3 - 1,",
    "e(24, 25, 48, 9, 7),",
    "e(37, 26, 35, 44, 27, 33, 18, 22, 16, 4), // First execution",
    "O[25],",
    "e(44, 27, 9, 0),",
    "O[5] = O[O[5]],",
    "O[4] == 0 ? e(41, 24, 28, 30, 23, 25, 20, 9) : e(25, 20, 9),",
    "O[80],",
    "O[4]++,",
    "a.byteValue() - ((a = a.shiftRight(8)).equals(6) ? 6 : 37) + e(22),",
    "O[5] -= O[2],",
    "O[5] = O[0],",
    "(a = a.modPow(b(107, 3), b(93, 14))).byteValue(),",
    "O[2] = O[0],",
    "O[5] = O[--O[1]],",
    "5,",
    "O[4] = O[0],",
    "O[2]--,",
    "O[25] < O[3] ? e(46, 10, 29) : e(2),",
    "(O[2] >= 0 ? e(22, 47, 16, 38, 28, 30) : e()) - 31,",
    "58 - (O[25] % 3 == 0 ? e(22, 11, 24, 47, 16, 15) : e()),",
    "O[5] == 0 ? 0 : (O[81] = 1) - 1,",
    "(O[4] < O[3] ? e(24, 43, 47, 16, 34, 19, 33) : e()) - 31,",
    "e(24, 21, 32),",
    "O[81] = O[0],",
    "e(24, 46, 22, 48, 26, 24, 21, 18, 24, 47, 40) - 26,",
    "O[25] < O[3] ? e(8, 10, 31, 37) : e(),",
    "(a = a.shiftLeft(8).add(b(O[5] & 0xFF))).byteValue(),",
    "45,",
    "O[80] = O[5],",
    "O[3],",
    "O[O[1]++] = O[0],",
    "O[5] = O[4],",
    "0,",
    "O[5] == 63 ? e(29) : e(39),",
    "in.nextLine().length() % 2,",
    "O[5] += O[2],",
    "O[5] *= O[2],",
    "e(O[5]),",
    "O[O[25] + 6] -= (O[O[25] + 66] = O[5]) + O[80],",
]

def addEntry(x):
    for p in x: indx.append(p)

while True:
    i = input("Input your number: ")

    log.success(indx[i])


# 13 = e(37, 26, 35, 44, 27, 33, 18, 22, 16, 4)
# 4 = (O[5] - 103 == 0 ? 5 : 0) = 0
# 16 = 0
