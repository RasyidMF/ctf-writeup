from pwn import *
from z3 import *

FLAG_SIZE = 52
argv = [BitVec(i, 16) for i in range(FLAG_SIZE)]
SOLVER = Solver()

update = []

# Add
challenge = ["(argv[28] & 0x20)","argv[36] & 0x10","argv[47] & 0x20","argv[32] & 0x20","argv[43] & 4","!(argv[50] & 0x80)","argv[8] & 1","argv[46] & 4","!(argv[32] & 0x80)","!(argv[8] & 4)","argv[48] & 0x10","!(argv[16] & 0x80)","!(argv[19] & 8)","argv[8] & 0x40","argv[43] & 0x10","argv[15] & 4","!(argv[0] & 4)","!(argv[43] & 8)","argv[25] & 0x40","argv[4] & 1","!(argv[43] & 0x80)","!(argv[44] & 8)","argv[33] & 0x20","!(argv[29] & 0x10)","argv[33] & 1","argv[28] & 0x40","argv[23] & 0x40","argv[24] & 1","argv[39] & 0x20","!(argv[37] & 4)","!(argv[13] & 0x80)","argv[49] & 0x20","argv[9] & 4","argv[7] & 0x20","!(argv[48] & 4)","!(argv[18] & 4)","!(argv[45] & 4)","argv[30] & 0x10","!(argv[7] & 0x10)","argv[49] & 0x40","!(argv[2] & 0x80)","argv[12] & 0x40","!(argv[37] & 8)","!(argv[29] & 8)","argv[29] & 0x20","argv[50] & 2","!(argv[45] & 1)","argv[10] & 0x10","!(argv[40] & 0x80)","!(argv[18] & 2)","argv[43] & 1","!(argv[26] & 0x80)","!(argv[51] & 0x80)","argv[20] & 4","argv[30] & 8","!(argv[4] & 0x10)","!(argv[4] & 0x80)","argv[21] & 0x40","!(argv[23] & 0x80)","argv[12] & 0x10","argv[41] & 1","argv[13] & 0x20","!(argv[36] & 1)","!(argv[1] & 1)","!(argv[19] & 0x80)","!(argv[5] & 0x80)","!(argv[50] & 0x40)","argv[8] & 0x10","!(argv[35] & 8)","!(argv[9] & 8)","argv[0] & 2","!(argv[21] & 0x80)","!(argv[7] & 1)","argv[41] & 8","!(argv[3] & 0x80)","argv[14] & 2","argv[22] & 2","argv[23] & 1","argv[39] & 2","!(argv[16] & 0x20)","!(argv[6] & 8)","!(argv[26] & 1)","argv[30] & 4","argv[26] & 2","!(argv[30] & 0x80)","!(argv[22] & 0x80)","!(argv[35] & 0x10)","argv[48] & 1","argv[33] & 4","argv[4] & 4","!(argv[36] & 0x80)","argv[31] & 8","!(argv[1] & 2)","argv[34] & 4","argv[16] & 1","!(argv[3] & 0x10)","argv[22] & 0x10","argv[42] & 1","argv[11] & 1","argv[1] & 0x10","argv[2] & 4","!(argv[10] & 8)","argv[19] & 1","!(argv[36] & 8)","!(argv[4] & 8)","!(argv[2] & 1)","!(argv[27] & 0x10)","argv[9] & 1","!(argv[13] & 2)","argv[5] & 0x20","!(argv[17] & 0x10)","argv[13] & 0x10","argv[13] & 0x40","argv[3] & 4","argv[7] & 2","argv[16] & 2","!(argv[32] & 8)","!(argv[35] & 2)","!(argv[49] & 8)","argv[27] & 4","!(argv[47] & 0x80)","argv[13] & 8","!(argv[1] & 0x80)","!(argv[38] & 0x80)","!(argv[36] & 4)","argv[51] & 0x10","!(argv[23] & 0x20)","argv[6] & 2","!(argv[35] & 0x80)","argv[20] & 0x20","argv[9] & 0x20","argv[45] & 0x20","argv[12] & 2","argv[6] & 0x10","argv[34] & 8","argv[26] & 0x20","!(argv[23] & 2)","!(argv[14] & 0x10)","argv[12] & 8","!(argv[34] & 0x80)","argv[16] & 4","!(argv[3] & 2)","argv[49] & 2","!(argv[22] & 0x20)","argv[21] & 0x20","!(argv[41] & 0x20)","argv[37] & 2","!(argv[18] & 0x80)","argv[7] & 4","argv[47] & 4","!(argv[10] & 2)","!(argv[11] & 0x80)","!(argv[32] & 4)","argv[38] & 0x40","!(argv[0] & 0x10)","argv[2] & 0x40","!(argv[28] & 0x80)","argv[43] & 0x40","argv[47] & 8","argv[44] & 0x20","argv[24] & 0x20","argv[9] & 2","!(argv[6] & 4)","!(argv[49] & 4)","!(argv[0] & 8)","argv[11] & 0x40","argv[5] & 1","argv[20] & 8","argv[47] & 0x40","argv[38] & 8","argv[25] & 4","!(argv[33] & 0x80)","!(argv[5] & 8)","!(argv[40] & 0x10)","argv[25] & 0x10","argv[37] & 1","!(argv[2] & 8)","argv[42] & 0x40","argv[9] & 0x10","!(argv[46] & 0x80)","argv[41] & 4","argv[41] & 0x10","!(argv[29] & 0x80)","!(argv[0] & 0x20)","!(argv[37] & 0x40)","!(argv[25] & 0x80)","!(argv[23] & 0x10)","!(argv[27] & 1)","argv[15] & 0x10","argv[31] & 0x40","!(argv[42] & 0x10)","argv[10] & 0x20","!(argv[48] & 0x40)","!(argv[15] & 0x80)","!(argv[28] & 8)","argv[39] & 1","argv[40] & 2","!(argv[50] & 4)","argv[39] & 0x10","argv[42] & 4","argv[45] & 8","!(argv[13] & 4)","argv[51] & 0x20","!(argv[21] & 8)","!(argv[32] & 2)","argv[29] & 4","argv[30] & 1","argv[44] & 2","argv[3] & 8","!(argv[10] & 0x80)","!(argv[51] & 2)","argv[38] & 1","argv[19] & 0x40","argv[39] & 0x40","argv[27] & 0x20","argv[45] & 0x40","argv[2] & 2","argv[27] & 8","argv[11] & 0x10","argv[24] & 0x40","!(argv[5] & 2)","argv[25] & 2","argv[26] & 0x40","!(argv[24] & 4)","argv[4] & 0x40","!(argv[47] & 0x10)","argv[41] & 0x40","argv[34] & 0x10","argv[35] & 0x40","!(argv[5] & 4)","!(argv[21] & 2)","!(argv[45] & 0x10)","argv[36] & 2","argv[40] & 0x40","argv[21] & 4","argv[19] & 4","!(argv[12] & 0x80)","!(argv[42] & 2)","!(argv[1] & 8)","argv[16] & 0x10","!(argv[35] & 4)","argv[13] & 1","argv[1] & 0x40","argv[46] & 1","argv[31] & 0x10","argv[38] & 4","argv[47] & 2","argv[38] & 2","!(argv[37] & 0x80)","!(argv[28] & 2)","!(argv[10] & 0x40)","argv[46] & 0x10","!(argv[39] & 0x80)","!(argv[46] & 0x20)","argv[31] & 1","argv[37] & 0x10","argv[0] & 1","argv[17] & 0x20","argv[11] & 0x20","!(argv[49] & 0x80)","!(argv[18] & 8)","argv[22] & 0x40","!(argv[28] & 4)","argv[14] & 8","!(argv[48] & 8)","argv[6] & 0x40","!(argv[12] & 0x20)","argv[48] & 0x20","!(argv[31] & 4)","argv[46] & 0x40","!(argv[33] & 8)","!(argv[42] & 0x80)","argv[15] & 1","!(argv[24] & 0x80)","argv[12] & 4","!(argv[21] & 0x10)","!(argv[21] & 1)","argv[31] & 0x20","argv[26] & 4","argv[51] & 0x40","argv[42] & 0x20","argv[12] & 1","!(argv[15] & 8)","!(argv[27] & 0x80)","argv[34] & 2","argv[6] & 0x20","argv[23] & 8","!(argv[39] & 4)","!(argv[18] & 1)","argv[32] & 0x10","!(argv[28] & 1)","argv[46] & 2","argv[11] & 2","!(argv[28] & 0x10)","argv[29] & 2","!(argv[47] & 1)","argv[17] & 4","argv[14] & 0x20","!(argv[43] & 2)","!(argv[31] & 0x80)","!(argv[31] & 2)","!(argv[35] & 0x20)","argv[15] & 0x40","!(argv[30] & 0x20)","!(argv[45] & 0x80)","argv[9] & 0x40","argv[7] & 8","!(argv[0] & 0x80)","!(argv[38] & 0x20)","argv[37] & 0x20","argv[22] & 1","argv[50] & 0x10","argv[51] & 4","!(argv[44] & 0x10)","!(argv[25] & 0x20)","!(argv[34] & 0x20)","!(argv[44] & 0x80)","!(argv[5] & 0x10)","argv[0] & 0x40","!(argv[20] & 0x10)","argv[8] & 8","!(argv[17] & 0x80)","argv[35] & 1","argv[33] & 0x10","!(argv[32] & 1)","!(argv[39] & 8)","argv[4] & 0x20","argv[22] & 4","!(argv[14] & 0x80)","!(argv[20] & 0x80)","argv[20] & 2","argv[23] & 4","argv[43] & 0x20","argv[34] & 1","argv[36] & 0x20","argv[46] & 8","argv[30] & 2","argv[8] & 0x20","argv[17] & 2","!(argv[27] & 2)","!(argv[19] & 2)","!(argv[7] & 0x80)","!(argv[3] & 1)","!(argv[1] & 0x20)","argv[30] & 0x40","argv[5] & 0x40","argv[34] & 0x40","!(argv[26] & 0x10)","argv[3] & 0x40","!(argv[41] & 0x80)","argv[40] & 1","!(argv[45] & 2)","argv[1] & 4","!(argv[26] & 8)","!(argv[48] & 0x80)","argv[25] & 8","argv[17] & 0x40","argv[29] & 1","argv[33] & 0x40","argv[27] & 0x40","argv[25] & 1","!(argv[10] & 1)","!(argv[4] & 2)","argv[40] & 4","argv[8] & 2","!(argv[15] & 2)","argv[14] & 1","!(argv[10] & 4)","argv[42] & 8","!(argv[50] & 8)","argv[38] & 0x10","argv[50] & 1","!(argv[2] & 0x10)","argv[51] & 1","!(argv[44] & 4)","argv[29] & 0x40","argv[16] & 0x40","argv[24] & 0x10","argv[18] & 0x20","!(argv[18] & 0x40)","argv[20] & 0x40","!(argv[32] & 0x40)","argv[11] & 4","argv[3] & 0x20","!(argv[2] & 0x20)","argv[7] & 0x40","argv[41] & 2","!(argv[49] & 0x10)","!(argv[9] & 0x80)","!(argv[48] & 2)","!(argv[24] & 2)","argv[36] & 0x40","!(argv[17] & 1)","argv[18] & 0x10","argv[19] & 0x10","argv[50] & 0x20","argv[40] & 0x20","argv[44] & 0x40","argv[51] & 8","argv[14] & 4","!(argv[6] & 0x80)","!(argv[17] & 8)","argv[22] & 8","!(argv[33] & 2)","!(argv[20] & 1)","!(argv[6] & 1)","argv[19] & 0x20","!(argv[8] & 0x80)","argv[16] & 8","argv[15] & 0x20","!(argv[11] & 8)","argv[24] & 8","argv[14] & 0x40","argv[40] & 8","argv[49] & 1","argv[44] & 1"]
for x in challenge:
    if x[0] == "!":
        update.append(x[1::] + " == 0")
    else:
        update.append(x + " != 0")

# Adding into solver
for x in update:
    SOLVER.add(eval(x))

print(SOLVER.check())
print(SOLVER.model())